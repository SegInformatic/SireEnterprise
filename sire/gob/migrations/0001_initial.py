# Generated by Django 5.1.5 on 2025-01-27 00:23

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import gob.models.cliente
import gob.models.empresa
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rfc', models.CharField(max_length=13, unique=True, validators=[gob.models.empresa.Empresa.validar_rfc])),
                ('regimen_fiscal', models.CharField(choices=[('GENERAL', 'General de Ley'), ('SIMPLIFICADO', 'Régimen Simplificado de Confianza'), ('RESIDENTE', 'Residente en el Extranjero')], max_length=12)),
                ('nombre_contacto', models.CharField(help_text='Nombre de la persona de contacto.', max_length=255, validators=[django.core.validators.RegexValidator(message='El nombre de contacto solo puede contener letras y espacios.', regex='^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$')])),
                ('telefono_contacto', models.CharField(help_text='Teléfono de la persona de contacto.', max_length=10, validators=[django.core.validators.RegexValidator(message='Debe ser un número de 10 dígitos.', regex='^\\d{10}$')])),
                ('razon_social', models.CharField(help_text='Nombre de la empresa o persona física.', max_length=255, validators=[django.core.validators.MinLengthValidator(5)])),
                ('direccion_fiscal', models.TextField(help_text='Dirección fiscal de la empresa o persona física.', validators=[django.core.validators.MinLengthValidator(5)])),
                ('codigo_postal', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator('^\\d{5}$')])),
                ('certificado', models.FileField(blank=True, null=True, upload_to='empresas/cer/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['cer'])])),
                ('cer_key', models.FileField(blank=True, null=True, upload_to='empresas/key/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['key'])])),
                ('users', models.ManyToManyField(related_name='empresas', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('razon_social', models.CharField(max_length=255)),
                ('rfc', models.CharField(max_length=13, unique=True, validators=[gob.models.cliente.Cliente.validar_rfc])),
                ('direccion_fiscal', models.TextField(validators=[django.core.validators.MinLengthValidator(10, message='La dirección fiscal debe tener al menos 10 caracteres')])),
                ('contacto_principal', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(5)])),
                ('telefono_contacto', models.CharField(help_text='Teléfono de la persona de contacto.', max_length=10, validators=[django.core.validators.RegexValidator(message='Debe ser un número de 10 dígitos.', regex='^\\d{10}$')])),
                ('forma_pago', models.CharField(max_length=100)),
                ('cuenta_pago', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='La cuenta de pago debe tener entre 10 y 18 dígitos.', regex='^\\d{10,18}$')])),
                ('empresa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clientes', to='gob.empresa')),
            ],
        ),
        migrations.CreateModel(
            name='FacturaElectronica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estatus', models.SmallIntegerField(choices=[(1, 'Activa'), (2, 'Pagada'), (3, 'Cancelada')], default=1, verbose_name='Estatus')),
                ('subtotal', models.DecimalField(decimal_places=4, default=0, max_digits=16)),
                ('total', models.DecimalField(decimal_places=4, default=0, max_digits=16)),
                ('folio_timbrado', models.IntegerField(blank=True, default=1, unique=True, verbose_name='Folio de timbrado')),
                ('moneda', models.SmallIntegerField(choices=[(1, 'Pesos Mexicanos'), (2, 'Dólares Americanos')], default=1)),
                ('fecha_emision', models.DateField(default=django.utils.timezone.now)),
                ('efecto_contable', models.SmallIntegerField(choices=[(1, 'Normal'), (2, 'Anticipo'), (3, 'Nota de Credito'), (4, 'Nota Cargo')], default=1, verbose_name='Efecto contable')),
                ('cliente', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='facturas', to='gob.cliente')),
            ],
        ),
    ]
